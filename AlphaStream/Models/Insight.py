from datetime import datetime


class Insight:
    """Individual prediction/insight generated by an Alpha in the QuantConnect Alpha Streams market"""

    def __init__(self, json):
        self.Id = json['id']

        self.Type = json.get('type', None)

        self.Direction = json.get('direction', None)

        self.Period = json.get('period', None)

        self.CreatedTime = datetime.utcfromtimestamp(json['created-time']) if 'created-time' in json else None

        self.CloseTime = datetime.utcfromtimestamp(json['close-time']) if 'close-time' in json else None

        self.Magnitude = json.get('magnitude', None)

        self.Confidence = json.get('confidence', None)

        self.SourceModel = json.get('source-model', None)

        self.Group = json.get('group', None)

        self.Source = json.get('source', None)  # In sample

        self.ReferenceValue = json.get('reference-value', None)

        self.EstimatedValue = json.get('estimated-value', None)

        self.Symbol = json.get('symbol', None)

        self.Ticker = json.get('ticker', None)

        self.Invalid = json.get('invalid', None)

        self.ScoreFinal = json.get('score-final', False)

        self.Weight = json.get('weight', None)

    def __repr__(self):
        return f'{self.CreatedTime} Alpha {self.Source} {self.Type} insight for {self.Ticker:<10} going {self.Direction} over the next {self.Period}s'